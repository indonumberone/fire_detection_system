[
    {
        "id": "7ccb3cdf93986cee",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "56d8c91edc04a828",
        "type": "mqtt-broker",
        "name": "MQTT V3",
        "broker": "23.95.68.195",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "4d53498cf86299a8",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "hfs",
        "name": "kelompok4",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://localhost:8086",
        "timeout": "10",
        "rejectUnauthorized": true
    },
    {
        "id": "7ef122a97c15d252",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "monitoring data",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "2.0",
        "url": "http://influxdb:8086",
        "timeout": "10",
        "rejectUnauthorized": true
    },
    {
        "id": "19016063c8b1b524",
        "type": "websocket-listener",
        "path": "/data",
        "wholemsg": "false"
    },
    {
        "id": "4a75c3058d5288a0",
        "type": "websocket-listener",
        "path": "/testing",
        "wholemsg": "false"
    },
    {
        "id": "5ce44b1768d4da31",
        "type": "http in",
        "z": "7ccb3cdf93986cee",
        "name": "tes",
        "url": "/getDataPasca",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 960,
        "wires": [
            [
                "e620b87853cd0807"
            ]
        ]
    },
    {
        "id": "87f55052e49a37f7",
        "type": "http response",
        "z": "7ccb3cdf93986cee",
        "name": "ok",
        "statusCode": "200",
        "headers": {},
        "x": 550,
        "y": 960,
        "wires": []
    },
    {
        "id": "e620b87853cd0807",
        "type": "function",
        "z": "7ccb3cdf93986cee",
        "name": "function 6",
        "func": "let data = flow.get(\"DATA\");\nif (data) {\n    data.tempat = {\n        \"ruang\": \"pasca 01.03\",\n        \"lantai\": 1\n    };\n    msg.payload = data;  \n} else {\n    msg.payload = { error: \"Sensor data not available\" };  // Jika data tidak ada\n}\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 960,
        "wires": [
            [
                "87f55052e49a37f7"
            ]
        ]
    },
    {
        "id": "5b102174bc1d6d38",
        "type": "mqtt in",
        "z": "7ccb3cdf93986cee",
        "name": "ruang ps",
        "topic": "system/ruangps",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "56d8c91edc04a828",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 100,
        "y": 500,
        "wires": [
            [
                "797152397adca53f",
                "6a60ea4cbfa07f6d",
                "f89f99f4bb4f46da",
                "53bee521d8c535f5",
                "7035f036284b2e9d",
                "95b9d1084e805bc6"
            ]
        ]
    },
    {
        "id": "ea6e3415fcc892e5",
        "type": "debug",
        "z": "7ccb3cdf93986cee",
        "name": "debug 6",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 740,
        "wires": []
    },
    {
        "id": "6a60ea4cbfa07f6d",
        "type": "function",
        "z": "7ccb3cdf93986cee",
        "name": "function 7",
        "func": "let data = msg.payload;\n\nflow.set(\"DATA\", data);  // Menyimpan data sensor di flow context\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 740,
        "wires": [
            [
                "ea6e3415fcc892e5"
            ]
        ]
    },
    {
        "id": "3cb455165ebbdfbc",
        "type": "websocket in",
        "z": "7ccb3cdf93986cee",
        "name": "",
        "x": 100,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "067e6add80487a34",
        "type": "websocket out",
        "z": "7ccb3cdf93986cee",
        "name": "tes",
        "server": "4a75c3058d5288a0",
        "client": "",
        "x": 570,
        "y": 680,
        "wires": []
    },
    {
        "id": "d1a6febca49de098",
        "type": "http request",
        "z": "7ccb3cdf93986cee",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://bot:3030/webhook",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 570,
        "y": 860,
        "wires": [
            [
                "386621c81522dd0f"
            ]
        ],
        "info": "ppppppp"
    },
    {
        "id": "386621c81522dd0f",
        "type": "debug",
        "z": "7ccb3cdf93986cee",
        "name": "debug 7",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 860,
        "wires": []
    },
    {
        "id": "53bee521d8c535f5",
        "type": "function",
        "z": "7ccb3cdf93986cee",
        "name": "function 8",
        "func": "let data = flow.get(\"DATA\");\nif (data.system_status.status == \"DANGER\" || data.system_status.status == \"CRITICAL\" || data.system_status.status == \"WARNING\") {\n    data.tempat = {\n        \"ruang\": \"pasca 01.03\",\n        \"lantai\": 1\n    };\n    msg.payload = data; \n    msg.payload = data;\n    return msg;\n} \n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 860,
        "wires": [
            [
                "d1a6febca49de098"
            ]
        ]
    },
    {
        "id": "797152397adca53f",
        "type": "function",
        "z": "7ccb3cdf93986cee",
        "name": "function 9",
        "func": "\nlet payload = msg.payload;\n\nlet sensorData = {\n    temperature: payload.sensor.temperature,\n    humidity: payload.sensor.humidity,\n    gas: payload.sensor.gas,\n    flame: payload.sensor.flame\n};\n\nlet sensorMsg = { payload: sensorData };\n\nreturn [sensorMsg];\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 500,
        "wires": [
            [
                "70bfb87741f88acf"
            ]
        ]
    },
    {
        "id": "f89f99f4bb4f46da",
        "type": "function",
        "z": "7ccb3cdf93986cee",
        "name": "function 10",
        "func": "let payload = msg.payload;\n\nlet sensorData = {\n    temperature: payload.sensor.temperature,\n    humidity: payload.sensor.humidity,\n    gas: payload.sensor.gas,\n    flame: payload.sensor.flame\n};\n\nlet riskData = {\n    temperature_risk: payload.risk.temperature_risk,\n    humidity_risk: payload.risk.humidity_risk,\n    gas_risk: payload.risk.gas_risk\n};\n\n\nlet riskMsg = { payload: riskData };\n\nreturn [riskMsg];\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 560,
        "wires": [
            [
                "cc4dfade04f4c74b"
            ]
        ]
    },
    {
        "id": "70bfb87741f88acf",
        "type": "influxdb out",
        "z": "7ccb3cdf93986cee",
        "influxdb": "7ef122a97c15d252",
        "name": "sensor",
        "measurement": "sensors",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "hfs",
        "bucket": "mydatabase",
        "x": 570,
        "y": 500,
        "wires": []
    },
    {
        "id": "cc4dfade04f4c74b",
        "type": "influxdb out",
        "z": "7ccb3cdf93986cee",
        "influxdb": "7ef122a97c15d252",
        "name": "risk",
        "measurement": "risks",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "hfs",
        "bucket": "mydatabase",
        "x": 570,
        "y": 560,
        "wires": []
    },
    {
        "id": "7035f036284b2e9d",
        "type": "function",
        "z": "7ccb3cdf93986cee",
        "name": "function 11",
        "func": "let payload = msg.payload;\n\n\nlet temperatureRisk = payload.risk.temperature_risk < 0.5 ? \"Normal\": \"Warning\"\nlet humidityRisk = payload.risk.humidity_risk < 0.5 ? \"Normal\" : \"Warning\"\nlet gasRisk = payload.risk.gas_risk < 0.5 ? \"Normal\" : \"Warning\"\nlet fire = payload.sensor.flame == 0 ? \"Normal\" : \"Warning\"\nlet data = {\n    sensors:{\n    temperature: payload.sensor.temperature,\n    humidity: payload.sensor.humidity,\n    gas: payload.sensor.gas,\n    flame: payload.sensor.flame\n    },\n    risk:{\n        temperature_risk: temperatureRisk,\n        humidity_risk: humidityRisk,\n        gas_risk: gasRisk,\n        flame_risk: fire\n    },\n};\n\n\nreturn { payload: data };\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 680,
        "wires": [
            [
                "067e6add80487a34"
            ]
        ]
    },
    {
        "id": "95b9d1084e805bc6",
        "type": "function",
        "z": "7ccb3cdf93986cee",
        "name": "function 12",
        "func": "\nlet payload = msg.payload;\n\nlet system_status = {\n    status: payload.system_status.status,\n    risk_level: payload.system_status.risk_level,\n    detailed_status: payload.system_status.detailed_status,\n};\n\nlet sensorMsg = { payload: system_status };\n\nreturn [sensorMsg];\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 620,
        "wires": [
            [
                "47a39d7d961a0905"
            ]
        ]
    },
    {
        "id": "47a39d7d961a0905",
        "type": "influxdb out",
        "z": "7ccb3cdf93986cee",
        "influxdb": "7ef122a97c15d252",
        "name": "system_status",
        "measurement": "system_status",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "hfs",
        "bucket": "mydatabase",
        "x": 600,
        "y": 620,
        "wires": []
    },
    {
        "id": "c95d6ad0b3e8190b",
        "type": "debug",
        "z": "7ccb3cdf93986cee",
        "name": "debug 8",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 620,
        "wires": []
    }
]