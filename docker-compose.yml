version: '3.8'

services:
  node-red:
    image: nodered/node-red:latest
    container_name: node-red
    restart: unless-stopped
    ports:
      - "1880:1880"
    volumes:
      - ./node-red-data:/data
      - /usr/src/node-red/node_modules
    environment:
      - NODE_RED_ENABLE_PROJECTS=${NODE_RED_ENABLE_PROJECTS}
      - INFLUXDB_URL=http://influxdb:8086
    networks:
      - nodered_influxdb_grafana
    command: >
      sh -c "npm install node-red-contrib-influxdb && npm start -- --userDir /data"

  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    restart: unless-stopped
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=${INFLUXDB_INIT_MODE}
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_INIT_USERNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_INIT_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_INIT_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_INIT_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_INIT_ADMIN_TOKEN}
    volumes:
      - ./influxdb-data:/var/lib/influxdb2
    networks:
      - nodered_influxdb_grafana

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - ./grafana-data:/var/lib/grafana
    networks:
      - nodered_influxdb_grafana

networks:
  nodered_influxdb_grafana:
    driver: bridge
